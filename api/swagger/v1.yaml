---
swagger: "2.0"
info:
  description: >-
    A governify implementation of SLA Metrics endpoint from SLA4OAI specification
    <div class="postman-run-button"
    data-postman-action="collection/import"
    data-postman-var-1="6206b76a664c54dce891"
    data-postman-param="env%5Blocal%5D=W3sia2V5Ijoic3VwZXJ2aXNvci5ob3N0IiwidmFsdWUiOiJsb2NhbGhvc3Q6NTAwMCIsInR5cGUiOiJ0ZXh0IiwiZW5hYmxlZCI6dHJ1ZSwiaG92ZXJlZCI6ZmFsc2V9LHsia2V5IjoibW9uaXRvci5ob3N0IiwidmFsdWUiOiJsb2NhbGhvc3Q6NTAwMSIsInR5cGUiOiJ0ZXh0IiwiZW5hYmxlZCI6dHJ1ZSwiaG92ZXJlZCI6ZmFsc2V9XQ==&env%5Bheroku%5D=W3sia2V5Ijoic3VwZXJ2aXNvci5ob3N0IiwidmFsdWUiOiJzdXBlcnZpc29yLm9haS5nb3Zlcm5pZnkuaW8iLCJ0eXBlIjoidGV4dCIsImVuYWJsZWQiOnRydWUsImhvdmVyZWQiOmZhbHNlfSx7ImtleSI6Im1vbml0b3IuaG9zdCIsInZhbHVlIjoibW9uaXRvci5vYWkuZ292ZXJuaWZ5LmlvIiwidHlwZSI6InRleHQiLCJlbmFibGVkIjp0cnVlLCJob3ZlcmVkIjpmYWxzZX1d"></div>
    <script type="text/javascript">
      (function (p,o,s,t,m,a,n) {
        !p[s] && (p[s] = function () { (p[t] || (p[t] = [])).push(arguments); });
        !o.getElementById(s+t) && o.getElementsByTagName("head")[0].appendChild((
          (n = o.createElement("script")),
          (n.id = s+t), (n.async = 1), (n.src = m), n
        ));
      }(window, document, "_pm", "PostmanRunObject", "https://run.pstmn.io/button.js"));
    </script>
  version: "1.0.0"
  title: "Monitor"
  termsOfService: "http://metrics.sla4oai.governify.io/terms/"
  contact:
    name: "ISA Group"
    url: "http://governify.io"
    email: "isagroup.us@gmail.com"
  license:
    name: Apache License 2.0
    url: "http://www.apache.org/licenses/"
basePath: "/api/v1"
schemes:
- http
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /metrics:
    post:
      tags:
        - metrics
      description: >-
        The SLA Metrics exposes an endpoint for gathering the metrics
        collected  from different nodes.
      operationId: "metricsPOST"
      parameters:
      - in: "body"
        name: "metrics"
        description: "Measures and metadata of metrics ."
        required: true
        schema:
          $ref: "#/definitions/metrics"
      responses:
        201:
          description: "Metrics have been added."
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/errorModel"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/errorModel"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Metrics"
definitions:
  metrics:
    type: "object"
    properties:
      sla:
        type: "string"
      scope:
        type: "object"
        properties: {}
      sender:
        $ref: "#/definitions/metrics_sender"
      measures:
        type: "array"
        items:
          $ref: "#/definitions/measure"
  measure:
    type: "object"
    properties:
      resource:
        type: "string"
      method:
        type: "string"
      result:
        type: "integer"
        format: "int64"
      ts:
        type: "string"
      metrics:
        type: "object"
        properties: {}
  errorModel:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
  metrics_sender:
    properties:
      host:
        type: "string"
      environment:
        type: "string"
      cluster:
        type: "string"
